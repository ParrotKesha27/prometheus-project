global:
    scrape_interval:     120s # By default, scrape targets every 15 seconds.
    evaluation_interval: 120s # By default, scrape targets every 15 seconds.
    # scrape_timeout is set to the global default (10s).

    # Attach these labels to any time series or alerts when communicating with
    # external systems (federation, remote storage, Alertmanager).
    external_labels:
        monitor: 'my-project'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
 - 'alerts.yml'
# - "first.rules"
# - "second.rules"

alerting:
    alertmanagers:
        - scheme: http
          path_prefix: /alertmanager
          static_configs:
              - targets: ['alertmanager:9093']

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
    # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
    - job_name: 'prometheus'

      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 120s
      metrics_path: /metrics
        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.

      static_configs:
          - targets: ['localhost:9090']

    - job_name: 'artprima'
      metrics_path: /metrics/prometheus
      static_configs:
          - targets: [10.0.1.1]

    - job_name: 'node_exporter'
      static_configs:
          - targets: ['10.0.1.1:9100']

    - job_name: 'blackbox'
      metrics_path: /probe
      params:
          module: [http_2xx] # Look for a HTTP 200 response.
      static_configs:
          - targets:
                - 'http://10.0.1.1'
      relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: 'blackbox-exporter:9115'
